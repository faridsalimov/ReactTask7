{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Farid\\\\Desktop\\\\ReactTask\\\\task\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\n\nimport React, { useState, useEffect } from \"react\";\nimport questions from \"./data\";\nimport \"./App.css\"; // Stil dosyasını içe aktar\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [userAnswers, setUserAnswers] = useState(Array(questions.length).fill('')); // Kullanıcının verdiği cevapları saklar\n  const [showScore, setShowScore] = useState(false);\n  useEffect(() => {\n    setCurrentQuestionIndex(0);\n  }, []);\n  const checkAnswer = selectedOption => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (selectedOption === currentQuestion.correctAnswer) {\n      setScore(score + 10);\n    }\n    const updatedUserAnswers = [...userAnswers]; // Kullanıcının cevaplarını güncellemek için kopyasını oluştur\n    updatedUserAnswers[currentQuestionIndex] = selectedOption; // Kullanıcının cevabını güncelle\n    setUserAnswers(updatedUserAnswers);\n  };\n  const goToPreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n  const goToNextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const finishQuiz = () => {\n    setShowScore(true);\n  };\n  const closeScore = () => {\n    setShowScore(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"10 Sorulu Soru Program\\u0131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), !showScore && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: questions[currentQuestionIndex].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"options-list\",\n          children: questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: userAnswers[currentQuestionIndex] === option ? \"option-selected\" : \"\",\n              onClick: () => checkAnswer(option),\n              children: [String.fromCharCode(65 + index), \". \", option]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goToPreviousQuestion,\n          disabled: currentQuestionIndex === 0,\n          children: \"\\xD6nceki Soru\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goToNextQuestion,\n          disabled: currentQuestionIndex === questions.length - 1,\n          children: \"Sonraki Soru\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: finishQuiz,\n          disabled: currentQuestionIndex < questions.length - 1,\n          children: \"Bitir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), showScore && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Tebrikler! T\\xFCm sorular\\u0131 tamamlad\\u0131n\\u0131z.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Toplam Skor: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeScore,\n          children: \"Kapat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"JKbMutSpIf3Yndo54PbUlBnRxHI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","questions","jsxDEV","_jsxDEV","App","_s","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","userAnswers","setUserAnswers","Array","length","fill","showScore","setShowScore","checkAnswer","selectedOption","currentQuestion","correctAnswer","updatedUserAnswers","goToPreviousQuestion","goToNextQuestion","finishQuiz","closeScore","className","children","fileName","_jsxFileName","lineNumber","columnNumber","question","options","map","option","index","onClick","String","fromCharCode","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Farid/Desktop/ReactTask/task/src/App.js"],"sourcesContent":["// App.js\n\nimport React, { useState, useEffect } from \"react\";\nimport questions from \"./data\";\nimport \"./App.css\"; // Stil dosyasını içe aktar\n\nconst App = () => {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [userAnswers, setUserAnswers] = useState(Array(questions.length).fill('')); // Kullanıcının verdiği cevapları saklar\n  const [showScore, setShowScore] = useState(false);\n\n  useEffect(() => {\n    setCurrentQuestionIndex(0);\n  }, []);\n\n  const checkAnswer = (selectedOption) => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (selectedOption === currentQuestion.correctAnswer) {\n      setScore(score + 10);\n    }\n    const updatedUserAnswers = [...userAnswers]; // Kullanıcının cevaplarını güncellemek için kopyasını oluştur\n    updatedUserAnswers[currentQuestionIndex] = selectedOption; // Kullanıcının cevabını güncelle\n    setUserAnswers(updatedUserAnswers);\n  };\n\n  const goToPreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  const goToNextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  const finishQuiz = () => {\n    setShowScore(true);\n  };\n\n  const closeScore = () => {\n    setShowScore(false);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>10 Sorulu Soru Programı</h1>\n      {!showScore && (\n        <div>\n          <div className=\"question-container\">\n            <h2>{questions[currentQuestionIndex].question}</h2>\n            <ul className=\"options-list\">\n              {questions[currentQuestionIndex].options.map((option, index) => (\n                <li key={index}>\n                  <button\n                    className={userAnswers[currentQuestionIndex] === option ? \"option-selected\" : \"\"}\n                    onClick={() => checkAnswer(option)}\n                  >\n                    {String.fromCharCode(65 + index)}. {option}\n                  </button>\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div className=\"navigation-buttons\">\n            <button onClick={goToPreviousQuestion} disabled={currentQuestionIndex === 0}>\n              Önceki Soru\n            </button>\n            <button onClick={goToNextQuestion} disabled={currentQuestionIndex === questions.length - 1}>\n              Sonraki Soru\n            </button>\n            <button onClick={finishQuiz} disabled={currentQuestionIndex < questions.length - 1}>\n              Bitir\n            </button>\n          </div>\n        </div>\n      )}\n      {showScore && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <h2>Tebrikler! Tüm soruları tamamladınız.</h2>\n            <h2>Toplam Skor: {score}</h2>\n            <button onClick={closeScore}>Kapat</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}