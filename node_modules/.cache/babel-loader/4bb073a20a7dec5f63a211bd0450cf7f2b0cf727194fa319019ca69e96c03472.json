{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Farid\\\\Desktop\\\\ReactTask\\\\task\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\n\nimport React, { useState, useEffect } from \"react\";\nimport questions from \"./data\";\nimport \"./App.css\"; // Stil dosyasını içe aktar\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [userAnswers, setUserAnswers] = useState(Array(questions.length).fill('')); // Kullanıcının verdiği cevapları saklar\n\n  useEffect(() => {\n    setCurrentQuestionIndex(0);\n  }, []);\n  const checkAnswer = selectedOption => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (selectedOption === currentQuestion.correctAnswer) {\n      setScore(score + 10);\n    }\n    const updatedUserAnswers = [...userAnswers]; // Kullanıcının cevaplarını güncellemek için kopyasını oluştur\n    updatedUserAnswers[currentQuestionIndex] = selectedOption; // Kullanıcının cevabını güncelle\n    setUserAnswers(updatedUserAnswers);\n  };\n  const goToPreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n  const goToNextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const finishQuiz = () => {\n    // Skoru göster\n    alert(`Tebrikler! Tüm soruları tamamladınız. Toplam Skor: ${score}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"10 Sorulu Soru Program\\u0131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: questions[currentQuestionIndex].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"options-list\",\n        children: questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => checkAnswer(option),\n            children: [String.fromCharCode(65 + index), \". \", option]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToPreviousQuestion,\n        disabled: currentQuestionIndex === 0,\n        children: \"\\xD6nceki Soru\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToNextQuestion,\n        disabled: currentQuestionIndex === questions.length - 1,\n        children: \"Sonraki Soru\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: finishQuiz,\n        disabled: currentQuestionIndex < questions.length - 1,\n        children: \"Bitir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"C8c8F14GdDblApubix5so5gN/wQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","questions","jsxDEV","_jsxDEV","App","_s","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","userAnswers","setUserAnswers","Array","length","fill","checkAnswer","selectedOption","currentQuestion","correctAnswer","updatedUserAnswers","goToPreviousQuestion","goToNextQuestion","finishQuiz","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","question","options","map","option","index","onClick","String","fromCharCode","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Farid/Desktop/ReactTask/task/src/App.js"],"sourcesContent":["// App.js\n\nimport React, { useState, useEffect } from \"react\";\nimport questions from \"./data\";\nimport \"./App.css\"; // Stil dosyasını içe aktar\n\nconst App = () => {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [userAnswers, setUserAnswers] = useState(Array(questions.length).fill('')); // Kullanıcının verdiği cevapları saklar\n\n  useEffect(() => {\n    setCurrentQuestionIndex(0);\n  }, []);\n\n  const checkAnswer = (selectedOption) => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (selectedOption === currentQuestion.correctAnswer) {\n      setScore(score + 10);\n    }\n    const updatedUserAnswers = [...userAnswers]; // Kullanıcının cevaplarını güncellemek için kopyasını oluştur\n    updatedUserAnswers[currentQuestionIndex] = selectedOption; // Kullanıcının cevabını güncelle\n    setUserAnswers(updatedUserAnswers);\n  };\n\n  const goToPreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  const goToNextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  const finishQuiz = () => {\n    // Skoru göster\n    alert(`Tebrikler! Tüm soruları tamamladınız. Toplam Skor: ${score}`);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>10 Sorulu Soru Programı</h1>\n      <div className=\"question-container\">\n        <h2>{questions[currentQuestionIndex].question}</h2>\n        <ul className=\"options-list\">\n          {questions[currentQuestionIndex].options.map((option, index) => (\n            <li key={index}>\n              <button onClick={() => checkAnswer(option)}>{String.fromCharCode(65 + index)}. {option}</button>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"navigation-buttons\">\n        <button onClick={goToPreviousQuestion} disabled={currentQuestionIndex === 0}>Önceki Soru</button>\n        <button onClick={goToNextQuestion} disabled={currentQuestionIndex === questions.length - 1}>Sonraki Soru</button>\n        <button onClick={finishQuiz} disabled={currentQuestionIndex < questions.length - 1}>Bitir</button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}