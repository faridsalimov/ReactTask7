{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Farid\\\\Desktop\\\\ReactTask\\\\task\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport questions from \"./data\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [userAnswers, setUserAnswers] = useState(Array(questions.length).fill(\"\"));\n  const [showScore, setShowScore] = useState(false);\n  useEffect(() => {\n    // Soruları karıştır\n    const shuffledQuestions = shuffleArray(questionsData);\n    setQuestions(shuffledQuestions);\n    setCurrentQuestionIndex(0);\n  }, []);\n  const shuffleArray = array => {\n    const shuffledArray = [...array];\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n    }\n    return shuffledArray;\n  };\n  const checkAnswer = selectedOption => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (selectedOption === currentQuestion.options[currentQuestion.correctAnswerIndex]) {\n      setScore(score + 10);\n    }\n    const updatedUserAnswers = [...userAnswers];\n    updatedUserAnswers[currentQuestionIndex] = selectedOption;\n    setUserAnswers(updatedUserAnswers);\n  };\n  const goToPreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n  const goToNextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const finishQuiz = () => {\n    const answeredAllQuestions = userAnswers.every(answer => answer !== \"\");\n    if (!answeredAllQuestions) {\n      alert(\"Please answer all questions.\");\n    } else {\n      setShowScore(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [!showScore && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [currentQuestionIndex + 1, \". \", questions[currentQuestionIndex].question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"options-list\",\n          children: questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => checkAnswer(option),\n            className: userAnswers[currentQuestionIndex] === option ? \"option-selected\" : \"\",\n            children: [String.fromCharCode(65 + index), \") \", option]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goToPreviousQuestion,\n          disabled: currentQuestionIndex === 0,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goToNextQuestion,\n          disabled: currentQuestionIndex === questions.length - 1,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: finishQuiz,\n          children: \"Finish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), showScore && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Congratulations!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"sxW3Sn0VcoLBtS3etkj0W6MNq5Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","questions","jsxDEV","_jsxDEV","App","_s","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","userAnswers","setUserAnswers","Array","length","fill","showScore","setShowScore","shuffledQuestions","shuffleArray","questionsData","array","shuffledArray","i","j","Math","floor","random","checkAnswer","selectedOption","currentQuestion","options","correctAnswerIndex","updatedUserAnswers","goToPreviousQuestion","goToNextQuestion","finishQuiz","answeredAllQuestions","every","answer","alert","className","children","question","fileName","_jsxFileName","lineNumber","columnNumber","map","option","index","onClick","String","fromCharCode","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Farid/Desktop/ReactTask/task/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport questions from \"./data\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [userAnswers, setUserAnswers] = useState(Array(questions.length).fill(\"\"));\n  const [showScore, setShowScore] = useState(false);\n\n  useEffect(() => {\n    // Soruları karıştır\n    const shuffledQuestions = shuffleArray(questionsData);\n    setQuestions(shuffledQuestions);\n    setCurrentQuestionIndex(0);\n  }, []);\n\n  const shuffleArray = (array) => {\n    const shuffledArray = [...array];\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n    }\n    return shuffledArray;\n  };\n\n  const checkAnswer = (selectedOption) => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (selectedOption === currentQuestion.options[currentQuestion.correctAnswerIndex]) {\n      setScore(score + 10);\n    }\n    const updatedUserAnswers = [...userAnswers];\n    updatedUserAnswers[currentQuestionIndex] = selectedOption;\n    setUserAnswers(updatedUserAnswers);\n  };\n\n  const goToPreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  const goToNextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  const finishQuiz = () => {\n    const answeredAllQuestions = userAnswers.every(answer => answer !== \"\");\n    if (!answeredAllQuestions) {\n      alert(\"Please answer all questions.\");\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      {!showScore && (\n        <div>\n          <div className=\"question-container\">\n            <h2>{currentQuestionIndex + 1}. {questions[currentQuestionIndex].question}</h2>\n            <ul className=\"options-list\">\n              {questions[currentQuestionIndex].options.map((option, index) => (\n                <li key={index} onClick={() => checkAnswer(option)} className={userAnswers[currentQuestionIndex] === option ? \"option-selected\" : \"\"}>\n                  {String.fromCharCode(65 + index)}) {option}\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div className=\"navigation-buttons\">\n            <button onClick={goToPreviousQuestion} disabled={currentQuestionIndex === 0}>Previous</button>\n            <button onClick={goToNextQuestion} disabled={currentQuestionIndex === questions.length - 1}>Next</button>\n            <button onClick={finishQuiz}>Finish</button>\n          </div>\n        </div>\n      )}\n      {showScore && (\n        <div className=\"score-content\">\n          <h1>Congratulations!</h1>\n          <h2>Score: {score}</h2>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}