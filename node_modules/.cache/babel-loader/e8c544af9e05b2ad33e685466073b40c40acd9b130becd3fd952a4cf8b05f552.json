{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Farid\\\\Desktop\\\\ReactTask\\\\task\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport questions from \"./data\";\nimport Question from \"./components/Question\";\nimport Score from \"./components/Score\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  useEffect(() => {\n    setCurrentQuestionIndex(0);\n  }, []);\n  const checkAnswer = selectedOption => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (selectedOption === currentQuestion.correctAnswer) {\n      setScore(score + 10);\n    }\n    // Bir sonraki soruya geç\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [currentQuestionIndex < questions.length ? /*#__PURE__*/_jsxDEV(Question, {\n      question: questions[currentQuestionIndex].question,\n      options: questions[currentQuestionIndex].options,\n      checkAnswer: checkAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tebrikler! T\\xFCm sorular\\u0131 tamamlad\\u0131n\\u0131z.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Toplam Skor: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Score, {\n      score: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eEN+DAMETLuNhFuqwWrbL7ZkgM0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","questions","Question","Score","jsxDEV","_jsxDEV","App","_s","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","checkAnswer","selectedOption","currentQuestion","correctAnswer","className","children","length","question","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Farid/Desktop/ReactTask/task/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport questions from \"./data\";\nimport Question from \"./components/Question\";\nimport Score from \"./components/Score\";\n\nconst App = () => {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n\n  useEffect(() => {\n    setCurrentQuestionIndex(0);\n  }, []);\n\n  const checkAnswer = (selectedOption) => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (selectedOption === currentQuestion.correctAnswer) {\n      setScore(score + 10);\n    }\n    // Bir sonraki soruya geç\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n  };\n\n  return (\n    <div className=\"container\">\n      {currentQuestionIndex < questions.length ? (\n        <Question\n          question={questions[currentQuestionIndex].question}\n          options={questions[currentQuestionIndex].options}\n          checkAnswer={checkAnswer}\n        />\n      ) : (\n        <div>\n          <h2>Tebrikler! Tüm soruları tamamladınız.</h2>\n          <h2>Toplam Skor: {score}</h2>\n        </div>\n      )}\n      <Score score={score} />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,QAAQ;AAC9B,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACnE,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAErCC,SAAS,CAAC,MAAM;IACdS,uBAAuB,CAAC,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,WAAW,GAAIC,cAAc,IAAK;IACtC,MAAMC,eAAe,GAAGb,SAAS,CAACO,oBAAoB,CAAC;IACvD,IAAIK,cAAc,KAAKC,eAAe,CAACC,aAAa,EAAE;MACpDJ,QAAQ,CAACD,KAAK,GAAG,EAAE,CAAC;IACtB;IACA;IACAD,uBAAuB,CAACD,oBAAoB,GAAG,CAAC,CAAC;EACnD,CAAC;EAED,oBACEH,OAAA;IAAKW,SAAS,EAAC,WAAW;IAAAC,QAAA,GACvBT,oBAAoB,GAAGP,SAAS,CAACiB,MAAM,gBACtCb,OAAA,CAACH,QAAQ;MACPiB,QAAQ,EAAElB,SAAS,CAACO,oBAAoB,CAAC,CAACW,QAAS;MACnDC,OAAO,EAAEnB,SAAS,CAACO,oBAAoB,CAAC,CAACY,OAAQ;MACjDR,WAAW,EAAEA;IAAY;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,gBAEFnB,OAAA;MAAAY,QAAA,gBACEZ,OAAA;QAAAY,QAAA,EAAI;MAAqC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9CnB,OAAA;QAAAY,QAAA,GAAI,eAAa,EAACP,KAAK;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CACN,eACDnB,OAAA,CAACF,KAAK;MAACO,KAAK,EAAEA;IAAM;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEV,CAAC;AAACjB,EAAA,CAlCID,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAoCT,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}