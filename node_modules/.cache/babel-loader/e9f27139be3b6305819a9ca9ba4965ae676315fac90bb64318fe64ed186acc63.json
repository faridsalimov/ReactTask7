{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Farid\\\\Desktop\\\\ReactTask\\\\task\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\n\nimport React, { useState, useEffect } from \"react\";\nimport questions from \"./data\";\nimport \"./App.css\"; // Stil dosyasını içe aktar\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [userAnswers, setUserAnswers] = useState(Array(questions.length).fill('')); // Kullanıcının verdiği cevapları saklar\n\n  useEffect(() => {\n    setCurrentQuestionIndex(0);\n  }, []);\n  const checkAnswer = selectedOption => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (selectedOption === currentQuestion.correctAnswer) {\n      setScore(score + 10);\n    }\n    const updatedUserAnswers = [...userAnswers]; // Kullanıcının cevaplarını güncellemek için kopyasını oluştur\n    updatedUserAnswers[currentQuestionIndex] = selectedOption; // Kullanıcının cevabını güncelle\n    setUserAnswers(updatedUserAnswers);\n  };\n  const goToPreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n  const goToNextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [\" \", currentQuestionIndex < questions.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"10 Sorulu Soru Program\\u0131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-container\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: questions[currentQuestionIndex].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"options-list\",\n          children: questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => checkAnswer(option),\n              children: [String.fromCharCode(65 + index), \". \", option]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goToPreviousQuestion,\n          disabled: currentQuestionIndex === 0,\n          children: \"\\xD6nceki Soru\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goToNextQuestion,\n          disabled: currentQuestionIndex === questions.length - 1,\n          children: \"Sonraki Soru\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tebrikler! T\\xFCm sorular\\u0131 tamamlad\\u0131n\\u0131z.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Toplam Skor: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"C8c8F14GdDblApubix5so5gN/wQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","questions","jsxDEV","_jsxDEV","App","_s","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","userAnswers","setUserAnswers","Array","length","fill","checkAnswer","selectedOption","currentQuestion","correctAnswer","updatedUserAnswers","goToPreviousQuestion","goToNextQuestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","question","options","map","option","index","onClick","String","fromCharCode","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Farid/Desktop/ReactTask/task/src/App.js"],"sourcesContent":["// App.js\n\nimport React, { useState, useEffect } from \"react\";\nimport questions from \"./data\";\nimport \"./App.css\"; // Stil dosyasını içe aktar\n\nconst App = () => {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [userAnswers, setUserAnswers] = useState(Array(questions.length).fill('')); // Kullanıcının verdiği cevapları saklar\n\n  useEffect(() => {\n    setCurrentQuestionIndex(0);\n  }, []);\n\n  const checkAnswer = (selectedOption) => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (selectedOption === currentQuestion.correctAnswer) {\n      setScore(score + 10);\n    }\n    const updatedUserAnswers = [...userAnswers]; // Kullanıcının cevaplarını güncellemek için kopyasını oluştur\n    updatedUserAnswers[currentQuestionIndex] = selectedOption; // Kullanıcının cevabını güncelle\n    setUserAnswers(updatedUserAnswers);\n  };\n\n  const goToPreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  const goToNextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  return (\n    <div className=\"container\"> {/* className ile CSS sınıflarını uygula */}\n      {currentQuestionIndex < questions.length ? (\n        <div>\n          <h1>10 Sorulu Soru Programı</h1>\n          <div className=\"question-container\"> {/* Soru bileşenini sarmala */}\n            <h2>{questions[currentQuestionIndex].question}</h2>\n            <ul className=\"options-list\">\n              {questions[currentQuestionIndex].options.map((option, index) => (\n                <li key={index}>\n                  <button onClick={() => checkAnswer(option)}>{String.fromCharCode(65 + index)}. {option}</button>\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div className=\"navigation-buttons\">\n            <button onClick={goToPreviousQuestion} disabled={currentQuestionIndex === 0}>Önceki Soru</button>\n            <button onClick={goToNextQuestion} disabled={currentQuestionIndex === questions.length - 1}>Sonraki Soru</button>\n          </div>\n        </div>\n      ) : (\n        <div>\n          <h2>Tebrikler! Tüm soruları tamamladınız.</h2>\n          <h2>Toplam Skor: {score}</h2>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}